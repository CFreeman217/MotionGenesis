   (1) % ME 493: Intermediate Dynamics
   (2) % Final Exam Problem 2
   (3) NewtonianFrame N 
   (4) RigidBody A, B, C
   (5) RigidFrame D
   (6) Point P(), Q()
   (7) Constant L, rB, g, tB
   (8) Variable Q{1:3}', U{1:3}'
   (9) A.SetMass(Ma)
   (10) A.SetInertia(Acm, 0, 0, IA)
   (11) B.SetMass(Mb)
   (12) B.SetInertia(Bcm, 0, 0, jB)
   (13) % B.SetInertia(Bcm, (0*Bx>*Bx> + 0*By>*By> + jB*Bz>*Bz>))
   (14) % B.SetInertia(Bcm, (0*Nx>*Nx> + 0*Ny>*Ny> + jB*Nz>*Nz>))
   (15) % B.SetInertia(Bcm, Mb*rB^2/4*(Bx>*Bx> + By>*By> + 2*Bz>*Bz>))
   (16) C.SetMass(Mc)
   (17) C.SetInertia(Ccm, 0, IC, 0)
   (18) SetGeneralizedSpeed(U1, U2, U3)
   (19) %%% Kinematical Equations %%%
   (20) Q1' = U1
-> (21) Q1' = U1

   (22) Q2' = U2
-> (23) Q2' = U2

   (24) Q3' = U3
-> (25) Q3' = U3

   (26) %%% Rotations %%%
   (27) A.RotateZ(N, tB+Q3)
-> (28) A_N = [cos(tB+Q3), sin(tB+Q3), 0;  -sin(tB+Q3), cos(tB+Q3), 0;  0, 0, 1]
-> (29) w_A_N> = U3*Az>
-> (30) alf_A_N> = U3'*Az>

   (31) B.RotateZ(N, tB+Q3)
-> (32) B_N = [cos(tB+Q3), sin(tB+Q3), 0;  -sin(tB+Q3), cos(tB+Q3), 0;  0, 0, 1]
-> (33) w_B_N> = U3*Bz>
-> (34) alf_B_N> = U3'*Bz>

   (35) C.Rotate(A, BodyY, -Q1)
-> (36) C_A = [cos(Q1), 0, sin(Q1);  0, 1, 0;  -sin(Q1), 0, cos(Q1)]
-> (37) w_C_A> = -U1*Cy>
-> (38) w_C_N> = sin(Q1)*U3*Cx> - U1*Cy> + cos(Q1)*U3*Cz>
-> (39) alf_C_A> = -U1'*Cy>
-> (40) alf_C_N> = (cos(Q1)*U1*U3+sin(Q1)*U3')*Cx> - U1'*Cy> + (cos(Q1)*U3'-sin
        (Q1)*U1*U3)*Cz>

   (41) D.RotateZ(N, tB)
-> (42) D_N = [cos(tB), sin(tB), 0;  -sin(tB), cos(tB), 0;  0, 0, 1]
-> (43) w_D_N> = 0>
-> (44) alf_D_N> = 0>

   (45) %%% Translations %%%
   (46) Ao.Translate(No, Q2*By>)
-> (47) p_No_Ao> = Q2*By>
-> (48) v_Ao_N> = -Q2*U3*Bx> + U2*By>
-> (49) a_Ao_N> = (-2*U2*U3-Q2*U3')*Bx> + (U2'-Q2*U3^2)*By>

   (50) Do.Translate(Ao, 0>)
-> (51) p_Ao_Do> = 0>
-> (52) v_Do_N> = -Q2*U3*Bx> + U2*By>
-> (53) a_Do_N> = (-2*U2*U3-Q2*U3')*Bx> + (U2'-Q2*U3^2)*By>

   (54) Bcm.Translate(Ao, 0>)
-> (55) p_Ao_Bcm> = 0>
-> (56) v_Bcm_N> = -Q2*U3*Bx> + U2*By>
-> (57) a_Bcm_N> = (-2*U2*U3-Q2*U3')*Bx> + (U2'-Q2*U3^2)*By>

   (58) Acm.Translate(Ao, L*Ax>)
-> (59) p_Ao_Acm> = L*Ax>
-> (60) v_Acm_N> = L*U3*Ay> - Q2*U3*Bx> + U2*By>
-> (61) a_Acm_N> = -L*U3^2*Ax> + L*U3'*Ay> + (-2*U2*U3-Q2*U3')*Bx> + (U2'-Q2*U3^2)*By>

   (62) Q.Translate(Ao, 2*L*Ax>)
-> (63) p_Ao_Q> = 2*L*Ax>
-> (64) v_Q_N> = 2*L*U3*Ay> - Q2*U3*Bx> + U2*By>
-> (65) a_Q_N> = -2*L*U3^2*Ax> + 2*L*U3'*Ay> + (-2*U2*U3-Q2*U3')*Bx> + (U2'-Q2*U3^2)*By>

   (66) Co.Translate(Q, -1.5*L*Cz>)
-> (67) p_Q_Co> = -1.5*L*Cz>
-> (68) v_Co_N> = 1.5*L*(1.333333+sin(Q1))*U3*Ay> - Q2*U3*Bx> + U2*By> + 1.5*L*U1*Cx>
-> (69) a_Co_N> = -2*L*U3^2*Ax> + 1.5*L*(2*cos(Q1)*U1*U3+1.333333*U3'+sin(Q1)*
        U3')*Ay> + (-2*U2*U3-Q2*U3')*Bx> + (U2'-Q2*U3^2)*By> - 1.5*L*(sin(Q1)*
        cos(Q1)*U3^2-U1')*Cx> + 1.5*L*(U1^2+sin(Q1)^2*U3^2)*Cz>

   (70) Ccm.Translate(Q, -0.75*L*Cz>)
-> (71) p_Q_Ccm> = -0.75*L*Cz>
-> (72) v_Ccm_N> = 0.75*L*(2.666667+sin(Q1))*U3*Ay> - Q2*U3*Bx> + U2*By> + 0.75*L*U1*Cx>
-> (73) a_Ccm_N> = -2*L*U3^2*Ax> + 0.75*L*(2*cos(Q1)*U1*U3+2.666667*U3'+sin(Q1)
        *U3')*Ay> + (-2*U2*U3-Q2*U3')*Bx> + (U2'-Q2*U3^2)*By> - 0.75*L*(sin(Q1)
        *cos(Q1)*U3^2-U1')*Cx> + 0.75*L*(U1^2+sin(Q1)^2*U3^2)*Cz>

   (74) P.Translate(Do, -rB*Bx>)
-> (75) p_Do_P> = -rB*Bx>
-> (76) v_P_N> = -Q2*U3*Bx> + (U2-rB*U3)*By>
-> (77) a_P_N> = (rB*U3^2-2*U2*U3-Q2*U3')*Bx> + (U2'-Q2*U3^2-rB*U3')*By>

   (78) %%% Constraints %%%
   (79) Dependent[1] = dot(V_P_N>, By>)
-> (80) Dependent[1] = U2 - rB*U3

   (81) Constrain(Dependent[U2])
-> (82) U2 = rB*U3
-> (83) U2' = rB*U3'

   (84) %%% Forces %%%
   (85) System.AddForceGravity(g*Nx>)
-> (86) Force_Acm> = Ma*g*Nx>
-> (87) Force_Bcm> = Mb*g*Nx>
-> (88) Force_Ccm> = Mc*g*Nx>

   (89) zero = System.GetDynamicsKane()
-> (90) zero[1] = 0.5625*(1.777778*IC+Mc*L^2)*U1' - 0.5625*Mc*L*cos(Q1)*(1.333333
        *g*cos(tB+Q3)+U3*(2.666667*U2+2.666667*L*U3+L*sin(Q1)*U3)) - 0.75*Mc*L*
        Q2*cos(Q1)*U3'

-> (91) zero[2] = 0.75*g*(1.333333*Mb*(rB*sin(tB+Q3)+Q2*cos(tB+Q3))+1.333333*
        Ma*(L*sin(tB+Q3)+rB*sin(tB+Q3)+Q2*cos(tB+Q3))+Mc*(1.333333*rB*sin(tB+
        Q3)+1.333333*Q2*cos(tB+Q3)+L*sin(tB+Q3)*(2.666667+sin(Q1)))) + 2*Ma*Q2*
        U2*U3 + 2*Mb*Q2*U2*U3 + 0.75*Mc*(2.666667*Q2*U2*U3+L*Q2*sin(Q1)*U1^2+1.5
        *L^2*cos(Q1)*(2.666667+sin(Q1))*U1*U3) + 0.5625*(1.777778*IA+1.777778*
        jB+1.777778*Mb*Q2^2+1.777778*Ma*(L^2+2*L*rB+Q2^2)+Mc*(1.777778*Q2^2+L^2
        *(2.666667+sin(Q1))^2)+1.777778*rB*(Ma*rB+Mb*rB+Mc*(rB+1.5*L*(2.666667+
        sin(Q1)))))*U3' - rB*U3*(Ma*Q2*U3+Mb*Q2*U3+Mc*(Q2*U3-1.5*L*cos(Q1)*U1))
        - 0.75*Mc*L*Q2*cos(Q1)*U1'

   (92) Input tFinal = 40.0, tStep = 0.1, absError = 1.0E-07
   (93) Input tB = 0.1745 rad, g = 9.81 m/s^2, rB = 0.3 m 
   (94) Input Mb = 1.0 kg, jB = 0.06 kg*m^2, L = 0.8 m 
   (95) Input Ma = 0.5 kg, IA = 0.12 kg*m^2, Mc = 0.3 kg
   (96) Input IC = 0.04 kg*m^2, Q1 = 0.2618 rad, Q2 = 0.02 m 
   (97) Input Q3 = 0.2618 rad, U1 = 0.0873 rad/s
   (98) Input U3 = 0.0 rad/s
   (99) OutputPlot t sec, Q1 deg, Q2 m, Q3 deg, U1 rad/s, U2 m/s, U3 rad/s
   (100) ODE(zero, U1', U3') Exam2_matlab.m

